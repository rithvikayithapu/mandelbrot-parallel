#!/bin/bash
#SBATCH --job-name=mandelbrot_omp        # Job name
#SBATCH --partition=normal               # Partition (queue) name, adjust as needed
#SBATCH --nodes=1                        # Number of nodes
#SBATCH --ntasks=8                       # Number of tasks
#SBATCH --output=slurm-%j.out            # Output file (%j is job ID)
#SBATCH --error=slurm-%j.err             # Error file

echo "Running with $OMP_NUM_THREADS OpenMP threads"

# Compile the C code with OpenMP support
gcc -o mandelbrot_omp mandelbrot_omp.c -O3 -fopenmp -lm
if [ $? -ne 0 ]; then
    echo "Compilation failed"
    exit 1
fi

# Create results file
RESULTS_FILE="mandelbrot_omp_results_$SLURM_JOB_ID.txt"

# Write system information to results file
echo "--- Mandelbrot OpenMP Benchmark Results ---" > $RESULTS_FILE
echo "Job ID: $SLURM_JOB_ID" >> $RESULTS_FILE
echo "Node: $SLURM_NODELIST" >> $RESULTS_FILE
echo "CPU cores: $SLURM_CPUS_PER_TASK" >> $RESULTS_FILE
echo "Date: $(date)" >> $RESULTS_FILE
echo "----------------------------------------" >> $RESULTS_FILE

# Run the program and redirect output to the results file
./mandelbrot_omp >> $RESULTS_FILE 2>&1

# Move the output PPM file to a unique name
mv mandelbrot_parallel.ppm mandelbrot_omp_$SLURM_JOB_ID.ppm

echo "Job completed. Output: mandelbrot_omp_$SLURM_JOB_ID.ppm, Results: $RESULTS_FILE"
